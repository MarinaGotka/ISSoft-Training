//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.dataconverter.com/", ConfigurationName="ServiceReference1.ConverterSoap")]
    public interface ConverterSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dataconverter.com/ConvertTemperatureFromCelsiusToFahrenheit", ReplyAction="*")]
        int ConvertTemperatureFromCelsiusToFahrenheit(int temperature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dataconverter.com/ConvertTemperatureFromCelsiusToFahrenheit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ConvertTemperatureFromCelsiusToFahrenheitAsync(int temperature);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConverterSoapChannel : Client.ServiceReference1.ConverterSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConverterSoapClient : System.ServiceModel.ClientBase<Client.ServiceReference1.ConverterSoap>, Client.ServiceReference1.ConverterSoap {
        
        public ConverterSoapClient() {
        }
        
        public ConverterSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConverterSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConverterSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConverterSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ConvertTemperatureFromCelsiusToFahrenheit(int temperature) {
            return base.Channel.ConvertTemperatureFromCelsiusToFahrenheit(temperature);
        }
        
        public System.Threading.Tasks.Task<int> ConvertTemperatureFromCelsiusToFahrenheitAsync(int temperature) {
            return base.Channel.ConvertTemperatureFromCelsiusToFahrenheitAsync(temperature);
        }
    }
}
